{
  "version": 3,
  "file": "flow-based.js",
  "sources": [
    "ng://flow-based/projects/flow-based/src/lib/flow-based.module.ts",
    "ng://flow-based/projects/flow-based/src/lib/drag-drop/movable-area/movable-area.directive.ts",
    "ng://flow-based/projects/flow-based/src/lib/drag-drop/movable/movable.directive.ts",
    "ng://flow-based/projects/flow-based/src/lib/drag-drop/draggable/draggable.directive.ts",
    "ng://flow-based/projects/flow-based/src/lib/block/block.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/components/dummy/dummy.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/components/source/source.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/flow-based.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/flow-based.service.ts",
    "ng://flow-based/projects/flow-based/src/lib/flow-based.ts"
  ],
  "sourcesContent": [
    "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {XXL_FLOW_TYPES} from './flow-based';\nimport {FlowBasedComponent} from './flow-based.component';\nimport {FlowBasedService} from './flow-based.service';\nimport {SourceComponent} from './components/source/source.component';\nimport {DummyComponent} from './components/dummy/dummy.component';\nimport {BlockComponent} from './block/block.component';\nimport {DraggableDirective} from './drag-drop/draggable/draggable.directive';\nimport {MovableDirective} from './drag-drop/movable/movable.directive';\nimport {MovableAreaDirective} from './drag-drop/movable-area/movable-area.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    FlowBasedComponent,\n    SourceComponent,\n    DummyComponent,\n    BlockComponent,\n    DraggableDirective,\n    MovableDirective,\n    MovableAreaDirective],\n  exports: [FlowBasedComponent],\n  providers: [\n    {\n      provide: XXL_FLOW_TYPES,\n      useValue: {\n        source: DummyComponent\n      }\n    },\n    FlowBasedService],\n  entryComponents: [DummyComponent, SourceComponent],\n\n})\n\nexport class FlowBasedModule {\n}\n",
    "import {AfterContentInit, ContentChildren, Directive, ElementRef, OnInit, QueryList} from '@angular/core';\nimport {MovableDirective} from '../movable/movable.directive';\nimport {Subscription} from 'rxjs';\n\nexport interface Boundaries {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\n@Directive({\n  selector: '[xxlMovableArea]'\n})\nexport class MovableAreaDirective implements AfterContentInit {\n  @ContentChildren(MovableDirective) movables: QueryList<MovableDirective>;\n\n\n  private boundaries: Boundaries;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngAfterContentInit(): void {\n    this.movables.changes.subscribe(() => {\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n      this.subscriptions = [];\n\n      this.movables.forEach(movable => {\n        this.subscriptions.push(movable.dragStart.subscribe(() => this.measureBoundaries(movable)));\n        this.subscriptions.push(movable.dragMove.subscribe(() => this.maintainBoundaries(movable)));\n      });\n    });\n\n    this.movables.notifyOnChanges();\n  }\n\n  private measureBoundaries(movable: MovableDirective): void {\n    const areaRect = this.element.nativeElement.getBoundingClientRect();\n    const movableRect = movable.element.nativeElement.getBoundingClientRect();\n\n    this.boundaries = {\n      minX: areaRect.left - movableRect.left + movable.position.x,\n      maxX: areaRect.right - movableRect.right + movable.position.x,\n      minY: areaRect.top - movableRect.top + movable.position.y,\n      maxY: areaRect.bottom - movableRect.bottom + movable.position.y\n    };\n  }\n\n  private maintainBoundaries(movable: MovableDirective): void {\n    movable.position.x = Math.max(this.boundaries.minX, movable.position.x);\n    movable.position.x = Math.min(this.boundaries.maxX, movable.position.x);\n    movable.position.y = Math.max(this.boundaries.minY, movable.position.y);\n    movable.position.y = Math.min(this.boundaries.maxY, movable.position.y);\n  }\n}\n",
    "import { Directive, ElementRef, HostBinding, HostListener } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport {DraggableDirective} from '../draggable/draggable.directive';\n\nexport interface XxlPosition {\n  x: number;\n  y: number;\n}\n\n@Directive({\n  selector: '[xxlMovable]'\n})\nexport class MovableDirective extends DraggableDirective {\n  @HostBinding('style.transform') get transform(): SafeStyle {\n    return this.sanitzier.bypassSecurityTrustStyle(`translateX(${this.position.x}px) translateY(${this.position.y}px)`);\n  }\n\n  public position = { x: 0, y: 0};\n  private startPosition: XxlPosition;\n\n  constructor(public element: ElementRef, private sanitzier: DomSanitizer) {\n    super();\n  }\n\n  @HostListener('dragStart', ['$event']) onDragStart(event: PointerEvent) {\n    this.startPosition = {\n      x: event.clientX - this.position.x,\n      y: event.clientY - this.position.y\n    };\n  }\n\n  @HostListener('dragMove', ['$event']) onDragMove(event: PointerEvent) {\n    this.position = {\n      x: event.clientX - this.startPosition.x,\n      y: event.clientY - this.startPosition.y\n    };\n\n  }\n\n  @HostListener('dragEnd', ['$event']) onDragEnd(event: PointerEvent) {\n  }\n}\n",
    "import { Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[xxlDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter<PointerEvent>();\n  @Output() dragMove = new EventEmitter<PointerEvent>();\n  @Output() dragEnd = new EventEmitter<PointerEvent>();\n\n  @HostBinding('class.draggable') draggable = true;\n  private dragState;\n  private isDragging = false;\n\n  @HostListener('pointerdown', ['$event']) onPointerDown(event) {\n    event.stopPropagation();\n    this.dragState = event;\n  }\n\n  @HostListener('document:pointerup', ['$event']) onPointerUp(event) {\n    if (this.isDragging) {\n      this.dragEnd.emit(event);\n    }\n\n    this.dragState = null;\n    this.isDragging = false\n  }\n\n  @HostListener('document:pointermove', ['$event']) onPointerMove(event) {\n    if (this.dragState) {\n      if (!this.isDragging) {\n        this.dragStart.emit(this.dragState);\n        this.isDragging = true;\n      }\n\n      this.dragMove.emit(event);\n    }\n  }\n}\n",
    "import { Component, ElementRef, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'xxl-block',\n  template: `<div class=\"socket top\"></div>\n<div class=\"socket right\"></div>\n<div class=\"socket bottom\"></div>\n<div class=\"socket left\"></div>\n\n<ng-content></ng-content>\n`,\n  styles: [`:host{background-color:#000;width:100px;height:100px;border:2px solid #a9a9a9;display:block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:move;position:absolute;padding:3px;overflow:hidden}.socket{position:absolute}`]\n})\nexport class BlockComponent implements OnInit {\n\n  constructor(private element: ElementRef) { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { Component, Inject, OnInit } from '@angular/core';\nimport { XXL_FLOW_ENTRY } from '../../flow-based.component';\n\n@Component({\n  selector: 'xxl-dummy',\n  template: `<p>\n  Dummy: {{state.state}}\n</p>\n\n`,\n  styles: [`:host{display:flex;height:100%;background-color:#d3d3d3}`]\n})\nexport class DummyComponent implements OnInit {\n  state: any;\n\n  constructor(@Inject(XXL_FLOW_ENTRY) state: any) {\n    this.state =  state;\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { Component, Inject, OnInit } from '@angular/core';\nimport { XXL_FLOW_ENTRY } from '../../flow-based.component';\n\n@Component({\n  selector: 'xxl-source',\n  template: `<p>\n  Source: {{state.state}}\n</p>\n`,\n  styles: [``]\n})\nexport class SourceComponent implements OnInit {\n  state: any;\n\n  constructor(@Inject(XXL_FLOW_ENTRY) state: any) {\n   this.state =  state;\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import {\n  Component,\n  ElementRef,\n  forwardRef, HostListener,\n  Inject,\n  InjectionToken,\n  Injector,\n  Input,\n  OnChanges,\n  OnInit, ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { XXL_FLOW_TYPES, XxlFlowEntry, XxlFlowTypes } from './flow-based';\nimport { FlowBasedService } from './flow-based.service';\n\nexport const XXL_FLOW_ENTRY = new InjectionToken<any>('xxl-flow-entry');\n\n@Component({\n  selector: 'xxl-flow-based',\n  template: `<article #area *ngIf=\"state\" class=\"is-max\" xxlMovableArea>\n  <h1>Flow</h1>\n  <xxl-block xxlMovable *ngFor=\"let entry of state.entries\"\n             [style.left.px]=\"entry.x - 46\" [style.top.px]=\"entry.y - 40\" class=\"block\">\n    <ng-container *ngIf=\"flowTypes[entry.type]\"\n                  [ngComponentOutlet]=\"flowTypes[entry.type]\"\n                  [ngComponentOutletInjector]=\"createInjector(entry)\"></ng-container>\n  </xxl-block>\n</article>\n`,\n  styles: [`:host{display:block;margin:20px;border:4px solid #bada55;height:calc(100% - 48px);overflow:hidden}article{height:100%}`],\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FlowBasedComponent), multi: true}]\n})\nexport class FlowBasedComponent implements OnInit, OnChanges, ControlValueAccessor {\n  flowTypes: XxlFlowTypes;\n  injectors: Injector[];\n  onChange: (state: any) => void;\n  state: any;\n\n  @ViewChild('area') area: ElementRef;\n\n  constructor(private element: ElementRef,\n              private service: FlowBasedService,\n              private injector: Injector,\n              @Inject(XXL_FLOW_TYPES) flowTypes: XxlFlowTypes) {\n    this.flowTypes = flowTypes;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(): void {\n\n  }\n\n  createInjector(entry: any) {\n    if (this.state) {\n      return Injector.create({\n        providers: [{provide: XXL_FLOW_ENTRY, useValue: entry}],\n        parent: this.injector\n      });\n    }\n  }\n\n  registerOnChange(onChange: (state: any) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(): void {\n  }\n\n  writeValue(state: any): void {\n    this.state = state;\n  }\n}\n",
    "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class FlowBasedService {\n\n  constructor() { }\n\n}\n",
    "import { InjectionToken, Type } from '@angular/core';\n\nexport interface XxlFlowTypes {\n  [key: string]: Type<any>;\n}\n\nexport interface XxlFlowEntry {\n  flowType: string;\n}\n\nexport const XXL_FLOW_TYPES = new InjectionToken<XxlFlowTypes>('xxl-flow-types');\n"
  ],
  "names": [],
  "mappings": "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"
}
