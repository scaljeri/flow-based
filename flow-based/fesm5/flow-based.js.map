{
  "version": 3,
  "file": "flow-based.js",
  "sources": [
    "ng://flow-based/projects/flow-based/src/lib/flow-based.module.ts",
    "ng://flow-based/projects/flow-based/src/lib/drag-drop/movable-area/movable-area.directive.ts",
    "ng://flow-based/projects/flow-based/src/lib/drag-drop/movable/movable.directive.ts",
    "ng://flow-based/projects/flow-based/src/lib/drag-drop/draggable/draggable.directive.ts",
    "ng://flow-based/projects/flow-based/src/lib/block/block.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/components/dummy/dummy.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/components/source/source.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/flow-based.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/flow-based.service.ts",
    "ng://flow-based/projects/flow-based/src/lib/flow-based.ts"
  ],
  "sourcesContent": [
    "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {XXL_FLOW_TYPES} from './flow-based';\nimport {FlowBasedComponent} from './flow-based.component';\nimport {FlowBasedService} from './flow-based.service';\nimport {SourceComponent} from './components/source/source.component';\nimport {DummyComponent} from './components/dummy/dummy.component';\nimport {BlockComponent} from './block/block.component';\nimport {DraggableDirective} from './drag-drop/draggable/draggable.directive';\nimport {MovableDirective} from './drag-drop/movable/movable.directive';\nimport {MovableAreaDirective} from './drag-drop/movable-area/movable-area.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    FlowBasedComponent,\n    SourceComponent,\n    DummyComponent,\n    BlockComponent,\n    DraggableDirective,\n    MovableDirective,\n    MovableAreaDirective],\n  exports: [FlowBasedComponent],\n  providers: [\n    {\n      provide: XXL_FLOW_TYPES,\n      useValue: {\n        source: DummyComponent\n      }\n    },\n    FlowBasedService],\n  entryComponents: [DummyComponent, SourceComponent],\n\n})\n\nexport class FlowBasedModule {\n}\n",
    "import {AfterContentInit, ContentChildren, Directive, ElementRef, OnInit, QueryList} from '@angular/core';\nimport {MovableDirective} from '../movable/movable.directive';\nimport {Subscription} from 'rxjs';\n\nexport interface Boundaries {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\n@Directive({\n  selector: '[xxlMovableArea]'\n})\nexport class MovableAreaDirective implements AfterContentInit {\n  @ContentChildren(MovableDirective) movables: QueryList<MovableDirective>;\n\n\n  private boundaries: Boundaries;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngAfterContentInit(): void {\n    this.movables.changes.subscribe(() => {\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n      this.subscriptions = [];\n\n      this.movables.forEach(movable => {\n        this.subscriptions.push(movable.dragStart.subscribe(() => this.measureBoundaries(movable)));\n        this.subscriptions.push(movable.dragMove.subscribe(() => this.maintainBoundaries(movable)));\n      });\n    });\n\n    this.movables.notifyOnChanges();\n  }\n\n  private measureBoundaries(movable: MovableDirective): void {\n    const areaRect = this.element.nativeElement.getBoundingClientRect();\n    const movableRect = movable.element.nativeElement.getBoundingClientRect();\n\n    this.boundaries = {\n      minX: areaRect.left - movableRect.left + movable.position.x,\n      maxX: areaRect.right - movableRect.right + movable.position.x,\n      minY: areaRect.top - movableRect.top + movable.position.y,\n      maxY: areaRect.bottom - movableRect.bottom + movable.position.y\n    };\n  }\n\n  private maintainBoundaries(movable: MovableDirective): void {\n    movable.position.x = Math.max(this.boundaries.minX, movable.position.x);\n    movable.position.x = Math.min(this.boundaries.maxX, movable.position.x);\n    movable.position.y = Math.max(this.boundaries.minY, movable.position.y);\n    movable.position.y = Math.min(this.boundaries.maxY, movable.position.y);\n  }\n}\n",
    "import { Directive, ElementRef, HostBinding, HostListener } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport {DraggableDirective} from '../draggable/draggable.directive';\n\nexport interface XxlPosition {\n  x: number;\n  y: number;\n}\n\n@Directive({\n  selector: '[xxlMovable]'\n})\nexport class MovableDirective extends DraggableDirective {\n  @HostBinding('style.transform') get transform(): SafeStyle {\n    return this.sanitzier.bypassSecurityTrustStyle(`translateX(${this.position.x}px) translateY(${this.position.y}px)`);\n  }\n\n  public position = { x: 0, y: 0};\n  private startPosition: XxlPosition;\n\n  constructor(public element: ElementRef, private sanitzier: DomSanitizer) {\n    super();\n  }\n\n  @HostListener('dragStart', ['$event']) onDragStart(event: PointerEvent) {\n    this.startPosition = {\n      x: event.clientX - this.position.x,\n      y: event.clientY - this.position.y\n    };\n  }\n\n  @HostListener('dragMove', ['$event']) onDragMove(event: PointerEvent) {\n    this.position = {\n      x: event.clientX - this.startPosition.x,\n      y: event.clientY - this.startPosition.y\n    };\n\n  }\n\n  @HostListener('dragEnd', ['$event']) onDragEnd(event: PointerEvent) {\n  }\n}\n",
    "import { Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[xxlDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter<PointerEvent>();\n  @Output() dragMove = new EventEmitter<PointerEvent>();\n  @Output() dragEnd = new EventEmitter<PointerEvent>();\n\n  @HostBinding('class.draggable') draggable = true;\n  private dragState;\n  private isDragging = false;\n\n  @HostListener('pointerdown', ['$event']) onPointerDown(event) {\n    event.stopPropagation();\n    this.dragState = event;\n  }\n\n  @HostListener('document:pointerup', ['$event']) onPointerUp(event) {\n    if (this.isDragging) {\n      this.dragEnd.emit(event);\n    }\n\n    this.dragState = null;\n    this.isDragging = false\n  }\n\n  @HostListener('document:pointermove', ['$event']) onPointerMove(event) {\n    if (this.dragState) {\n      if (!this.isDragging) {\n        this.dragStart.emit(this.dragState);\n        this.isDragging = true;\n      }\n\n      this.dragMove.emit(event);\n    }\n  }\n}\n",
    "import { Component, ElementRef, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'xxl-block',\n  template: `<div class=\"socket top\"></div>\n<div class=\"socket right\"></div>\n<div class=\"socket bottom\"></div>\n<div class=\"socket left\"></div>\n\n<ng-content></ng-content>\n`,\n  styles: [`:host{background-color:#000;width:100px;height:100px;border:2px solid #a9a9a9;display:block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:move;position:absolute;padding:3px;overflow:hidden}.socket{position:absolute}`]\n})\nexport class BlockComponent implements OnInit {\n\n  constructor(private element: ElementRef) { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { Component, Inject, OnInit } from '@angular/core';\nimport { XXL_FLOW_ENTRY } from '../../flow-based.component';\n\n@Component({\n  selector: 'xxl-dummy',\n  template: `<p>\n  Dummy: {{state.state}}\n</p>\n\n`,\n  styles: [`:host{display:flex;height:100%;background-color:#d3d3d3}`]\n})\nexport class DummyComponent implements OnInit {\n  state: any;\n\n  constructor(@Inject(XXL_FLOW_ENTRY) state: any) {\n    this.state =  state;\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { Component, Inject, OnInit } from '@angular/core';\nimport { XXL_FLOW_ENTRY } from '../../flow-based.component';\n\n@Component({\n  selector: 'xxl-source',\n  template: `<p>\n  Source: {{state.state}}\n</p>\n`,\n  styles: [``]\n})\nexport class SourceComponent implements OnInit {\n  state: any;\n\n  constructor(@Inject(XXL_FLOW_ENTRY) state: any) {\n   this.state =  state;\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import {\n  Component,\n  ElementRef,\n  forwardRef, HostListener,\n  Inject,\n  InjectionToken,\n  Injector,\n  Input,\n  OnChanges,\n  OnInit, ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { XXL_FLOW_TYPES, XxlFlowEntry, XxlFlowTypes } from './flow-based';\nimport { FlowBasedService } from './flow-based.service';\n\nexport const XXL_FLOW_ENTRY = new InjectionToken<any>('xxl-flow-entry');\n\n@Component({\n  selector: 'xxl-flow-based',\n  template: `<article #area *ngIf=\"state\" class=\"is-max\" xxlMovableArea>\n  <h1>Flow</h1>\n  <xxl-block xxlMovable *ngFor=\"let entry of state.entries\"\n             [style.left.px]=\"entry.x - 46\" [style.top.px]=\"entry.y - 40\" class=\"block\">\n    <ng-container *ngIf=\"flowTypes[entry.type]\"\n                  [ngComponentOutlet]=\"flowTypes[entry.type]\"\n                  [ngComponentOutletInjector]=\"createInjector(entry)\"></ng-container>\n  </xxl-block>\n</article>\n`,\n  styles: [`:host{display:block;margin:20px;border:4px solid #bada55;height:calc(100% - 48px);overflow:hidden}article{height:100%}`],\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FlowBasedComponent), multi: true}]\n})\nexport class FlowBasedComponent implements OnInit, OnChanges, ControlValueAccessor {\n  flowTypes: XxlFlowTypes;\n  injectors: Injector[];\n  onChange: (state: any) => void;\n  state: any;\n\n  @ViewChild('area') area: ElementRef;\n\n  constructor(private element: ElementRef,\n              private service: FlowBasedService,\n              private injector: Injector,\n              @Inject(XXL_FLOW_TYPES) flowTypes: XxlFlowTypes) {\n    this.flowTypes = flowTypes;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(): void {\n\n  }\n\n  createInjector(entry: any) {\n    if (this.state) {\n      return Injector.create({\n        providers: [{provide: XXL_FLOW_ENTRY, useValue: entry}],\n        parent: this.injector\n      });\n    }\n  }\n\n  registerOnChange(onChange: (state: any) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(): void {\n  }\n\n  writeValue(state: any): void {\n    this.state = state;\n  }\n}\n",
    "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class FlowBasedService {\n\n  constructor() { }\n\n}\n",
    "import { InjectionToken, Type } from '@angular/core';\n\nexport interface XxlFlowTypes {\n  [key: string]: Type<any>;\n}\n\nexport interface XxlFlowEntry {\n  flowType: string;\n}\n\nexport const XXL_FLOW_TYPES = new InjectionToken<XxlFlowTypes>('xxl-flow-types');\n"
  ],
  "names": [],
  "mappings": "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"
}
