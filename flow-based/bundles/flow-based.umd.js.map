{
  "version": 3,
  "file": "flow-based.umd.js",
  "sources": [
    "ng://flow-based/projects/flow-based/src/lib/flow-based.module.ts",
    "ng://flow-based/projects/flow-based/src/lib/drag-drop/movable-area/movable-area.directive.ts",
    "ng://flow-based/projects/flow-based/src/lib/drag-drop/movable/movable.directive.ts",
    "ng://flow-based/projects/flow-based/src/lib/drag-drop/draggable/draggable.directive.ts",
    "ng://flow-based/projects/flow-based/src/lib/block/block.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/components/dummy/dummy.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/components/source/source.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/flow-based.component.ts",
    "ng://flow-based/projects/flow-based/src/lib/flow-based.service.ts",
    "ng://flow-based/projects/flow-based/src/lib/flow-based.ts"
  ],
  "sourcesContent": [
    "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {XXL_FLOW_TYPES} from './flow-based';\nimport {FlowBasedComponent} from './flow-based.component';\nimport {FlowBasedService} from './flow-based.service';\nimport {SourceComponent} from './components/source/source.component';\nimport {DummyComponent} from './components/dummy/dummy.component';\nimport {BlockComponent} from './block/block.component';\nimport {DraggableDirective} from './drag-drop/draggable/draggable.directive';\nimport {MovableDirective} from './drag-drop/movable/movable.directive';\nimport {MovableAreaDirective} from './drag-drop/movable-area/movable-area.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    FlowBasedComponent,\n    SourceComponent,\n    DummyComponent,\n    BlockComponent,\n    DraggableDirective,\n    MovableDirective,\n    MovableAreaDirective],\n  exports: [FlowBasedComponent],\n  providers: [\n    {\n      provide: XXL_FLOW_TYPES,\n      useValue: {\n        source: DummyComponent\n      }\n    },\n    FlowBasedService],\n  entryComponents: [DummyComponent, SourceComponent],\n\n})\n\nexport class FlowBasedModule {\n}\n",
    "import {AfterContentInit, ContentChildren, Directive, ElementRef, OnInit, QueryList} from '@angular/core';\nimport {MovableDirective} from '../movable/movable.directive';\nimport {Subscription} from 'rxjs';\n\nexport interface Boundaries {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\n@Directive({\n  selector: '[xxlMovableArea]'\n})\nexport class MovableAreaDirective implements AfterContentInit {\n  @ContentChildren(MovableDirective) movables: QueryList<MovableDirective>;\n\n\n  private boundaries: Boundaries;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngAfterContentInit(): void {\n    this.movables.changes.subscribe(() => {\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n      this.subscriptions = [];\n\n      this.movables.forEach(movable => {\n        this.subscriptions.push(movable.dragStart.subscribe(() => this.measureBoundaries(movable)));\n        this.subscriptions.push(movable.dragMove.subscribe(() => this.maintainBoundaries(movable)));\n      });\n    });\n\n    this.movables.notifyOnChanges();\n  }\n\n  private measureBoundaries(movable: MovableDirective): void {\n    const areaRect = this.element.nativeElement.getBoundingClientRect();\n    const movableRect = movable.element.nativeElement.getBoundingClientRect();\n\n    this.boundaries = {\n      minX: areaRect.left - movableRect.left + movable.position.x,\n      maxX: areaRect.right - movableRect.right + movable.position.x,\n      minY: areaRect.top - movableRect.top + movable.position.y,\n      maxY: areaRect.bottom - movableRect.bottom + movable.position.y\n    };\n  }\n\n  private maintainBoundaries(movable: MovableDirective): void {\n    movable.position.x = Math.max(this.boundaries.minX, movable.position.x);\n    movable.position.x = Math.min(this.boundaries.maxX, movable.position.x);\n    movable.position.y = Math.max(this.boundaries.minY, movable.position.y);\n    movable.position.y = Math.min(this.boundaries.maxY, movable.position.y);\n  }\n}\n",
    "import { Directive, ElementRef, HostBinding, HostListener } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport {DraggableDirective} from '../draggable/draggable.directive';\n\nexport interface XxlPosition {\n  x: number;\n  y: number;\n}\n\n@Directive({\n  selector: '[xxlMovable]'\n})\nexport class MovableDirective extends DraggableDirective {\n  @HostBinding('style.transform') get transform(): SafeStyle {\n    return this.sanitzier.bypassSecurityTrustStyle(`translateX(${this.position.x}px) translateY(${this.position.y}px)`);\n  }\n\n  public position = { x: 0, y: 0};\n  private startPosition: XxlPosition;\n\n  constructor(public element: ElementRef, private sanitzier: DomSanitizer) {\n    super();\n  }\n\n  @HostListener('dragStart', ['$event']) onDragStart(event: PointerEvent) {\n    this.startPosition = {\n      x: event.clientX - this.position.x,\n      y: event.clientY - this.position.y\n    };\n  }\n\n  @HostListener('dragMove', ['$event']) onDragMove(event: PointerEvent) {\n    this.position = {\n      x: event.clientX - this.startPosition.x,\n      y: event.clientY - this.startPosition.y\n    };\n\n  }\n\n  @HostListener('dragEnd', ['$event']) onDragEnd(event: PointerEvent) {\n  }\n}\n",
    "import { Directive, EventEmitter, HostBinding, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[xxlDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter<PointerEvent>();\n  @Output() dragMove = new EventEmitter<PointerEvent>();\n  @Output() dragEnd = new EventEmitter<PointerEvent>();\n\n  @HostBinding('class.draggable') draggable = true;\n  private dragState;\n  private isDragging = false;\n\n  @HostListener('pointerdown', ['$event']) onPointerDown(event) {\n    event.stopPropagation();\n    this.dragState = event;\n  }\n\n  @HostListener('document:pointerup', ['$event']) onPointerUp(event) {\n    if (this.isDragging) {\n      this.dragEnd.emit(event);\n    }\n\n    this.dragState = null;\n    this.isDragging = false\n  }\n\n  @HostListener('document:pointermove', ['$event']) onPointerMove(event) {\n    if (this.dragState) {\n      if (!this.isDragging) {\n        this.dragStart.emit(this.dragState);\n        this.isDragging = true;\n      }\n\n      this.dragMove.emit(event);\n    }\n  }\n}\n",
    "import { Component, ElementRef, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'xxl-block',\n  template: `<div class=\"socket top\"></div>\n<div class=\"socket right\"></div>\n<div class=\"socket bottom\"></div>\n<div class=\"socket left\"></div>\n\n<ng-content></ng-content>\n`,\n  styles: [`:host{background-color:#000;width:100px;height:100px;border:2px solid #a9a9a9;display:block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:move;position:absolute;padding:3px;overflow:hidden}.socket{position:absolute}`]\n})\nexport class BlockComponent implements OnInit {\n\n  constructor(private element: ElementRef) { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { Component, Inject, OnInit } from '@angular/core';\nimport { XXL_FLOW_ENTRY } from '../../flow-based.component';\n\n@Component({\n  selector: 'xxl-dummy',\n  template: `<p>\n  Dummy: {{state.state}}\n</p>\n\n`,\n  styles: [`:host{display:flex;height:100%;background-color:#d3d3d3}`]\n})\nexport class DummyComponent implements OnInit {\n  state: any;\n\n  constructor(@Inject(XXL_FLOW_ENTRY) state: any) {\n    this.state =  state;\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { Component, Inject, OnInit } from '@angular/core';\nimport { XXL_FLOW_ENTRY } from '../../flow-based.component';\n\n@Component({\n  selector: 'xxl-source',\n  template: `<p>\n  Source: {{state.state}}\n</p>\n`,\n  styles: [``]\n})\nexport class SourceComponent implements OnInit {\n  state: any;\n\n  constructor(@Inject(XXL_FLOW_ENTRY) state: any) {\n   this.state =  state;\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import {\n  Component,\n  ElementRef,\n  forwardRef, HostListener,\n  Inject,\n  InjectionToken,\n  Injector,\n  Input,\n  OnChanges,\n  OnInit, ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { XXL_FLOW_TYPES, XxlFlowEntry, XxlFlowTypes } from './flow-based';\nimport { FlowBasedService } from './flow-based.service';\n\nexport const XXL_FLOW_ENTRY = new InjectionToken<any>('xxl-flow-entry');\n\n@Component({\n  selector: 'xxl-flow-based',\n  template: `<article #area *ngIf=\"state\" class=\"is-max\" xxlMovableArea>\n  <h1>Flow</h1>\n  <xxl-block xxlMovable *ngFor=\"let entry of state.entries\"\n             [style.left.px]=\"entry.x - 46\" [style.top.px]=\"entry.y - 40\" class=\"block\">\n    <ng-container *ngIf=\"flowTypes[entry.type]\"\n                  [ngComponentOutlet]=\"flowTypes[entry.type]\"\n                  [ngComponentOutletInjector]=\"createInjector(entry)\"></ng-container>\n  </xxl-block>\n</article>\n`,\n  styles: [`:host{display:block;margin:20px;border:4px solid #bada55;height:calc(100% - 48px);overflow:hidden}article{height:100%}`],\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FlowBasedComponent), multi: true}]\n})\nexport class FlowBasedComponent implements OnInit, OnChanges, ControlValueAccessor {\n  flowTypes: XxlFlowTypes;\n  injectors: Injector[];\n  onChange: (state: any) => void;\n  state: any;\n\n  @ViewChild('area') area: ElementRef;\n\n  constructor(private element: ElementRef,\n              private service: FlowBasedService,\n              private injector: Injector,\n              @Inject(XXL_FLOW_TYPES) flowTypes: XxlFlowTypes) {\n    this.flowTypes = flowTypes;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(): void {\n\n  }\n\n  createInjector(entry: any) {\n    if (this.state) {\n      return Injector.create({\n        providers: [{provide: XXL_FLOW_ENTRY, useValue: entry}],\n        parent: this.injector\n      });\n    }\n  }\n\n  registerOnChange(onChange: (state: any) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(): void {\n  }\n\n  writeValue(state: any): void {\n    this.state = state;\n  }\n}\n",
    "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class FlowBasedService {\n\n  constructor() { }\n\n}\n",
    "import { InjectionToken, Type } from '@angular/core';\n\nexport interface XxlFlowTypes {\n  [key: string]: Type<any>;\n}\n\nexport interface XxlFlowEntry {\n  flowType: string;\n}\n\nexport const XXL_FLOW_TYPES = new InjectionToken<XxlFlowTypes>('xxl-flow-types');\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "ElementRef",
    "HostListener",
    "HostBinding",
    "Output",
    "Directive",
    "EventEmitter",
    "Component",
    "Inject",
    "Injector",
    "InjectionToken"
  ],
  "mappings": "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"
}
